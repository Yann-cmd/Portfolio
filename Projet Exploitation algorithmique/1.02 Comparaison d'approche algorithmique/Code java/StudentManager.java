import java.util.ArrayList;
/**
 * Holds a list of students with methods for accessing and sorting them
 *
 * @author James Robertson
 * @version 1.0
 */
public class StudentManager
{
    // Holds all students
    private TNP tab;

    /**
     * Constructor for objects of class StudentManager
     */
    public StudentManager(int size)
    {
        // initialise list
        tab = new TNP(size);
    
    }

    /**
     * Register a student to a student manager
     * @param lastname IN: The student's last name
     * @param firstname IN: The student's first name
     * @param group IN: The student's group  
     */
    public void createStudent(String lastName, String firstName, String group)
    {
        Etudiant etudiant = new Etudiant(firstName,lastName,group);
        addStudent(etudiant);
    }
    
    
    /**
     * Adds a student to the student array
     * @param student IN: The student that you want to add  
     */
    public void addStudent(Etudiant student) {
        tab.elements[tab.count] = student;
        tab.count++;
    }
    
    /**
     * Get the TD group number of a student
     * @param etudiant IN: a student
     * @return the td group number
     * 
     */
    public int getTDGroup(Etudiant etudiant) {
        return (int) etudiant.group[0];
    }
    
    
    /**
     * Get the TP group of a student
     * @param etudiant IN: a student
     * @return the td group number
     */
    public String getTPGroup(Etudiant student) {
        return String.valueOf(student.group);
    }
    
    
     /**
     * Sorts the array of students using LibTri2
     */
    public void sort() {
        LibTri2.triSimple(tab);
    }
    
     /**
     * Get the number of currently loaded students
     * @return number of currently loaded students
     */
    public int count() {
        return tab.count;
    }
    
     /**
     * Prints the array of students in the console
     */
    public void showStudents() {
        for(int i = 0 ; i<tab.count; i++) {
            System.out.println(tab.elements[i].lastName  + " " + tab.elements[i].firstName  + " " + getTPGroup(tab.elements[i]));
        }
        
    }
    
    /**
     * Gets a TNP object containing an array of students
     * @return the TNP stored in student manager
     */
    public TNP getStudents() {
        return this.tab;
    }
    
 

 
    
        
        
    
    
    
    
}
